{"version":3,"file":"client-connection.js","names":["PSConnection","_this","socket","connected","queue","reconnectDelay","reconnectCap","shouldReconnect","reconnectTimer","worker","loading","PSStorage","init","then","initConnection","_proto","prototype","tryConnectInWorker","directConnect","canReconnect","uptime","Date","now","PS","startTime","confirm","okButton","confirmed","_PS$room","room","send","_this2","localStorage","getItem","console","warn","_unused","postMessage","type","server","Worker","onmessage","event","_event$data","data","log","forEach","msg","update","receive","handleDisconnect","debug","onerror","ev","_unused2","_PS$server","_PS$server2","_PS$server3","_PS$server4","_PS$server5","_this3","protocol","host","location","hostname","prefix","baseURL","window","SockJS","waited","step","startSpin","start","performance","timeout","toFixed","err","wsURL","replace","WebSocket","err2","error","port","httpport","onopen","raw","startsWith","arr","JSON","parse","slice","_i2","length","e","onclose","isOffline","roomid","rooms","_ev","retryConnection","_this4","setTimeout","mainmenu","Math","min","disconnect","_this$socket","_this$worker","close","terminate","reconnect","push","connect","_PS$connection","connection","prefs","doAutojoin","_unused3","_unused4","_this5","loaded","Config","testclient","origin","_Config","defaultserver","alert","addEventListener","onMessage","document","routes","client","PS_SKIP_CROSSDOMAIN","_Config2","Promise","resolve","_unused5","test","_Config3","iframe","createElement","src","encodeURIComponent","pathname","substr","style","display","body","appendChild","_Config4","_unused6","loader","request","uri","requests","idx","requestCount","postCrossOriginMessage","stringify","_PSStorage","frame","source","charAt","registered","id","link","rel","href","head","Object","assign","newData","load","save","prefData","storage","setItem","_unused7","nodewebkit","oldTeams","teams","list","unpackAll","packedTeams","packAll","_unused8","concat","removeItem","_unused9","undefined","reqData","_unused10","PSLoginServer","_class","_proto2","rawQuery","act","loginHost","loginserver","loginServerId","loginserverid","loginProxy","url","endsWith","POKEMON_SHOWDOWN_TESTCLIENT_KEY","sid","formBody","keys","map","k","join","fetch","method","headers","credentials","res","text","Net","get","query","arguments","HttpError","_Error","message","statusCode","_this6","call","name","Error","captureStackTrace","_unused11","_inheritsLoose","_wrapNativeSuper","NetRequest","_proto3","_this7","opts","reject","xhr","XMLHttpRequest","includes","encodeQuery","open","onreadystatechange","DONE","readyState","status","responseText","statusText","setRequestHeader","post","defaultRoute","urlencodedData","key","value","formData","form","elements","querySelectorAll","out","_i4","element","getAttribute","checked"],"sources":["../src/client-connection.ts"],"sourcesContent":["/**\n * Connection library\n *\n * @author Guangcong Luo <guangcongluo@gmail.com>\n * @license MIT\n */\n\nimport { Config, PS } from \"./client-main\";\n\ndeclare const SockJS: any;\ndeclare const POKEMON_SHOWDOWN_TESTCLIENT_KEY: string | undefined;\n\nexport class PSConnection {\n\tsocket: WebSocket | null = null;\n\tconnected = false;\n\tqueue: string[] = [];\n\treconnectDelay = 1000;\n\tprivate reconnectCap = 15000;\n\tprivate shouldReconnect = true;\n\treconnectTimer: ReturnType<typeof setTimeout> | null = null;\n\tprivate worker: Worker | null = null;\n\n\tconstructor() {\n\t\tconst loading = PSStorage.init();\n\t\tif (loading) {\n\t\t\tloading.then(() => {\n\t\t\t\tthis.initConnection();\n\t\t\t});\n\t\t} else {\n\t\t\tthis.initConnection();\n\t\t}\n\t}\n\n\tinitConnection() {\n\t\tif (!this.tryConnectInWorker()) this.directConnect();\n\t}\n\n\tcanReconnect() {\n\t\tconst uptime = Date.now() - PS.startTime;\n\t\tif (uptime > 24 * 60 * 60 * 1000) {\n\t\t\tPS.confirm(`It's been over a day since you first connected. Please refresh.`, {\n\t\t\t\tokButton: 'Refresh',\n\t\t\t}).then(confirmed => {\n\t\t\t\tif (confirmed) PS.room?.send(`/refresh`);\n\t\t\t});\n\t\t\treturn false;\n\t\t}\n\t\treturn this.shouldReconnect;\n\t}\n\n\ttryConnectInWorker(): boolean {\n\t\tif (this.socket) return false; // must be one or the other\n\t\tif (this.connected) return true;\n\n\t\t// Allow forcing direct connect for debugging by setting in console:\n\t\t// localStorage.setItem('ps_forceNoWorker','1')\n\t\ttry {\n\t\t\tif (localStorage.getItem('ps_forceNoWorker') === '1') {\n\t\t\t\tconsole.warn('[PS][debug] Worker disabled by ps_forceNoWorker flag');\n\t\t\t\treturn false;\n\t\t\t}\n\t\t} catch {}\n\n\t\tif (this.worker) {\n\t\t\tthis.worker.postMessage({ type: 'connect', server: PS.server });\n\t\t\treturn true;\n\t\t}\n\n\t\ttry {\n\t\t\tconst worker = new Worker('/js/client-connection-worker.js');\n\t\t\tthis.worker = worker;\n\n\t\t\tworker.postMessage({ type: 'connect', server: PS.server });\n\n\t\t\tworker.onmessage = event => {\n\t\t\t\tconst { type, data } = event.data;\n\t\t\t\tswitch (type) {\n\t\t\t\tcase 'connected':\n\t\t\t\t\tconsole.log('\\u2705 (CONNECTED via worker)');\n\t\t\t\t\tthis.connected = true;\n\t\t\t\t\tthis.queue.forEach(msg => worker.postMessage({ type: 'send', data: msg }));\n\t\t\t\t\tthis.queue = [];\n\t\t\t\t\tPS.update();\n\t\t\t\t\tbreak;\n\t\t\t\tcase 'message':\n\t\t\t\t\tPS.receive(data);\n\t\t\t\t\tbreak;\n\t\t\t\tcase 'disconnected':\n\t\t\t\t\tthis.handleDisconnect();\n\t\t\t\t\tbreak;\n\t\t\t\tcase 'error':\n\t\t\t\t\tconsole.warn(`Worker connection error: ${data}`);\n\t\t\t\t\tthis.worker = null;\n\t\t\t\t\t// onerror can occur on abrupt disconnects or fatal errors.\n\t\t\t\t\t// handleDisconnect ensures proper cleanup and also attemps to reconnect.\n\t\t\t\t\tthis.handleDisconnect(); // fallback\n\t\t\t\t\tbreak;\n\t\t\t\tcase 'debug':\n\t\t\t\t\tconsole.debug('[worker]', data);\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t};\n\n\t\t\tworker.onerror = (ev: ErrorEvent) => {\n\t\t\t\tconsole.warn('Worker connection error:', ev);\n\t\t\t\tthis.worker = null;\n\t\t\t\tthis.directConnect(); // fallback\n\t\t\t};\n\n\t\t\treturn true;\n\t\t} catch {\n\t\t\tconsole.warn('Worker connection failed, falling back to regular connection.');\n\t\t\tthis.worker = null;\n\t\t\treturn false;\n\t\t}\n\t}\n\n\tdirectConnect() {\n\t\tif (this.worker) return; // must be one or the other\n\n\t// Use SockJS endpoint first; fallback to native websocket sub-endpoint.\n\t// Build from PS.server (populated by config/crossdomain) instead of hardcoding.\n\tconst protocol = (PS.server.protocol || 'https') as 'http' | 'https';\n\tconst host = PS.server.host || location.hostname;\n\tconst prefix = PS.server.prefix || '/showdown';\n\tconst baseURL = `${protocol}://${host}${prefix}`;\n\t\tconsole.debug('[PS][debug] directConnect baseURL', baseURL, 'time', Date.now());\n\t\tlet socket: any = null;\n\t\t// If SockJS script tag is present but not yet evaluated, wait briefly (poll up to ~500ms)\n\t\tif (typeof (window as any).SockJS === 'undefined') {\n\t\t\tlet waited = 0;\n\t\t\tconst step = 50;\n\t\t\twhile (typeof (window as any).SockJS === 'undefined' && waited < 500) {\n\t\t\t\t// busy-wait minimal (synchronous sleep not available); use a blocking timestamp loop\n\t\t\t\tconst startSpin = Date.now();\n\t\t\t\twhile (Date.now() - startSpin < step) { /* spin */ }\n\t\t\t\twaited += step;\n\t\t\t}\n\t\t\tif (typeof (window as any).SockJS === 'undefined') {\n\t\t\t\tconsole.debug('[PS][debug] SockJS still undefined after wait, will attempt and likely fallback');\n\t\t\t}\n\t\t}\n\t\ttry {\n\t\t\tconst start = performance.now();\n\t\t\tsocket = new SockJS(baseURL, [], { timeout: 5 * 60 * 1000 });\n\t\t\tthis.socket = socket; // assign for typing convenience\n\t\t\tconsole.debug('[PS][debug] SockJS object created in', (performance.now()-start).toFixed(1),'ms');\n\t\t} catch (err) {\n\t\t\tconsole.warn('SockJS failed, attempting raw WebSocket fallback', err);\n\t\t\ttry {\n\t\t\t\tconst wsURL = baseURL.replace('http', 'ws') + '/websocket';\n\t\t\t\tconsole.debug('[PS][debug] attempting fallback WebSocket', wsURL);\n\t\t\t\tthis.socket = new WebSocket(wsURL);\n\t\t\t\tsocket = this.socket;\n\t\t\t} catch (err2) {\n\t\t\t\tconsole.error('Failed to create any socket', err2);\n\t\t\t\tthis.socket = null;\n\t\t\t\treturn;\n\t\t\t}\n\t\t}\n\n\t// Ensure PS.server has the fields we used (prefix may be set later by crossdomain, so don't overwrite)\n\tPS.server.protocol ||= protocol as any;\n\tPS.server.host ||= host;\n\tPS.server.port ||= (protocol === 'https' ? 443 : 80) as any;\n\tPS.server.httpport ||= (protocol === 'https' ? 443 : 80) as any;\n\tPS.server.prefix ||= prefix;\n\n\t\tsocket.onopen = () => {\n\t\t\tconsole.debug('[PS][debug] socket onopen fired at', Date.now());\n\t\t\tconsole.log('\\u2705 (CONNECTED)');\n\t\t\tthis.connected = true;\n\t\t\tthis.reconnectDelay = 1000;\n\t\t\tthis.queue.forEach(msg => socket.send(msg));\n\t\t\tthis.queue = [];\n\t\t\tPS.update();\n\t\t};\n\n\t\tsocket.onmessage = (ev: MessageEvent) => {\n\t\t\tconst raw = '' + (ev.data as any);\n\t\t\tif (typeof raw === 'string' && raw.startsWith('a[')) {\n\t\t\t\t// SockJS wraps messages as: a[\"msg\",\"msg2\",...]\n\t\t\t\ttry {\n\t\t\t\t\tconst arr: string[] = JSON.parse(raw.slice(1));\n\t\t\t\t\tfor (const msg of arr) PS.receive(msg);\n\t\t\t\t\treturn;\n\t\t\t\t} catch (e) {\n\t\t\t\t\tconsole.warn('[PS][debug] Failed to parse SockJS frame', e);\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tconsole.debug('[PS][debug] message frame length', raw.length);\n\t\t\t}\n\t\t\tPS.receive(raw);\n\t\t};\n\n\t\tsocket.onclose = () => {\n\t\t\tconsole.debug('[PS][debug] socket onclose fired at', Date.now());\n\t\t\tconsole.log('\\u274C (DISCONNECTED)');\n\t\t\tthis.handleDisconnect();\n\t\t\tconsole.log('\\u2705 (DISCONNECTED)');\n\t\t\tthis.connected = false;\n\t\t\tPS.isOffline = true;\n\t\t\tfor (const roomid in PS.rooms) {\n\t\t\t\tconst room = PS.rooms[roomid]!;\n\t\t\t\tif (room.connected === true) room.connected = 'autoreconnect';\n\t\t\t}\n\t\t\tthis.socket = null;\n\t\t\tPS.update();\n\t\t};\n\n\t\tsocket.onerror = (_ev: Event) => {\n\t\t\tconsole.debug('[PS][debug] socket onerror fired at', Date.now());\n\t\t\tPS.isOffline = true;\n\t\t\tthis.retryConnection();\n\t\t\tPS.update();\n\t\t};\n\t}\n\n\tprivate handleDisconnect() {\n\t\tthis.connected = false;\n\t\tPS.isOffline = true;\n\t\tthis.socket = null;\n\t\tfor (const roomid in PS.rooms) {\n\t\t\tconst room = PS.rooms[roomid]!;\n\t\t\tif (room.connected === true) room.connected = 'autoreconnect';\n\t\t}\n\t\tthis.retryConnection();\n\t\tPS.update();\n\t}\n\n\tprivate retryConnection() {\n\t\tif (!this.canReconnect()) return;\n\t\tif (this.reconnectTimer) return;\n\n\t\tthis.reconnectTimer = setTimeout(() => {\n\t\t\tthis.reconnectTimer = null;\n\t\t\tif (!this.connected && this.canReconnect()) {\n\t\t\t\tPS.mainmenu.send('/reconnect');\n\t\t\t\tthis.reconnectDelay = Math.min(this.reconnectDelay * 2, this.reconnectCap);\n\t\t\t}\n\t\t\tPS.update();\n\t\t}, this.reconnectDelay);\n\t}\n\n\tdisconnect() {\n\t\tthis.shouldReconnect = false;\n\t\tthis.socket?.close();\n\t\tthis.worker?.terminate();\n\t\tthis.worker = null;\n\t\tthis.handleDisconnect();\n\t\tPS.update();\n\t}\n\treconnect() {\n\t\tif (this.connected) return;\n\t\tif (this.worker && this.tryConnectInWorker()) return;\n\t\tthis.directConnect();\n\t}\n\n\tsend(msg: string) {\n\t\tif (!this.connected) {\n\t\t\tthis.queue.push(msg);\n\t\t\treturn;\n\t\t}\n\t\tif (this.worker) {\n\t\t\tthis.worker.postMessage({ type: 'send', data: msg });\n\t\t} else if (this.socket) {\n\t\t\tthis.socket.send(msg);\n\t\t}\n\t}\n\n\tstatic connect() {\n\t\tif (PS.connection?.socket) return;\n\t\tPS.isOffline = false;\n\t\tif (!PS.connection) {\n\t\t\tPS.connection = new PSConnection();\n\t\t} else {\n\t\t\tPS.connection.reconnect();\n\t\t}\n\t\t// prefs may not be ready yet; attempt now and schedule a retry\n\t\ttry {\n\t\t\tif (PS.prefs && typeof (PS.prefs as any).doAutojoin === 'function') {\n\t\t\t\t(PS.prefs as any).doAutojoin();\n\t\t\t} else {\n\t\t\t\tsetTimeout(() => {\n\t\t\t\t\ttry { if (PS.prefs && typeof (PS.prefs as any).doAutojoin === 'function') (PS.prefs as any).doAutojoin(); } catch {}\n\t\t\t\t}, 300);\n\t\t\t}\n\t\t} catch {}\n\t}\n}\n\nexport class PSStorage {\n\tstatic frame: WindowProxy | null = null;\n\tstatic requests: Record<string, (data: any) => void> | null = null;\n\tstatic requestCount = 0;\n\tstatic readonly origin = `https://${Config.routes.client}`;\n\tstatic loader?: () => void;\n\tstatic loaded: Promise<void> | boolean = false;\n\tstatic init(): void | Promise<void> {\n\t\tif (this.loaded) {\n\t\t\tif (this.loaded === true) return;\n\t\t\treturn this.loaded;\n\t\t}\n\t\tif (Config.testclient) {\n\t\t\treturn;\n\t\t} else if (`${location.protocol}//${location.hostname}` === PSStorage.origin) {\n\t\t\t// Same origin, everything can be kept as default\n\t\t\tConfig.server ||= Config.defaultserver;\n\t\t\treturn;\n\t\t}\n\n\t\t// Cross-origin\n\t\tif (!('postMessage' in window)) {\n\t\t\t// browser does not support cross-document messaging\n\t\t\tPS.alert(\"Sorry, psim connections are unsupported by your browser.\");\n\t\t\treturn;\n\t\t}\n\n\t\twindow.addEventListener('message', this.onMessage);\n\n\t\tif (document.location.hostname !== Config.routes.client) {\n\t\t\t// Custom deployment: allow skipping crossdomain.php iframe if unavailable.\n\t\t\t// Set window.PS_SKIP_CROSSDOMAIN = true in index.html to trigger this fast path.\n\t\t\ttry {\n\t\t\t\t// @ts-ignore\n\t\t\t\tif ((window as any).PS_SKIP_CROSSDOMAIN) {\n\t\t\t\t\tConfig.server ||= Config.defaultserver;\n\t\t\t\t\tthis.loaded = Promise.resolve();\n\t\t\t\t\treturn this.loaded;\n\t\t\t\t}\n\t\t\t} catch {}\n\t\t\t// If the configured client route points to the same host as the battle server domain\n\t\t\t// (e.g. server.pokemondnd.xyz) but crossdomain.php is absent, we also silently skip.\n\t\t\tif ((/pokemondnd\\.xyz$/).test(Config.routes.client)) {\n\t\t\t\tConfig.server ||= Config.defaultserver;\n\t\t\t\tthis.loaded = Promise.resolve();\n\t\t\t\treturn this.loaded;\n\t\t\t}\n\t\t\tconst iframe = document.createElement('iframe');\n\t\t\tiframe.src = 'https://' + Config.routes.client + '/crossdomain.php?host=' +\n\t\t\t\tencodeURIComponent(document.location.hostname) +\n\t\t\t\t'&path=' + encodeURIComponent(document.location.pathname.substr(1)) +\n\t\t\t\t'&protocol=' + encodeURIComponent(document.location.protocol);\n\t\t\tiframe.style.display = 'none';\n\t\t\tdocument.body.appendChild(iframe);\n\t\t} else {\n\t\t\tConfig.server ||= Config.defaultserver;\n\t\t\t// Append crossprotocol iframe without jQuery\n\t\t\tconst iframe = document.createElement('iframe');\n\t\t\tiframe.src = `https://${Config.routes.client}/crossprotocol.html?v1.2`;\n\t\t\tiframe.style.display = 'none';\n\t\t\ttry { document.body.appendChild(iframe); } catch {}\n\t\t\tsetTimeout(() => {\n\t\t\t\t// HTTPS may be blocked\n\t\t\t\t// yes, this happens, blame Avast! and BitDefender and other antiviruses\n\t\t\t\t// that feel a need to MitM HTTPS poorly\n\t\t\t}, 2000);\n\t\t}\n\t\tthis.loaded = new Promise(resolve => {\n\t\t\tthis.loader = resolve;\n\t\t});\n\t\treturn this.loaded;\n\t}\n\n\tstatic onMessage = (e: MessageEvent) => {\n\t\tif (e.origin !== PSStorage.origin) return;\n\n\t\tthis.frame = e.source as WindowProxy;\n\t\tconst data = e.data;\n\t\t// console.log(`top recv: ${data}`);\n\t\tswitch (data.charAt(0)) {\n\t\tcase 'c':\n\t\t\tConfig.server = JSON.parse(data.substr(1));\n\t\t\tif (Config.server.registered && Config.server.id !== 'showdown' && Config.server.id !== 'smogtours') {\n\t\t\t\tconst link = document.createElement('link');\n\t\t\t\tlink.rel = 'stylesheet';\n\t\t\t\tlink.href = `//${Config.routes.client}/customcss.php?server=${encodeURIComponent(Config.server.id)}`;\n\t\t\t\tdocument.head.appendChild(link);\n\t\t\t}\n\t\t\tObject.assign(PS.server, Config.server);\n\t\t\tbreak;\n\t\tcase 'p':\n\t\t\tconst newData = JSON.parse(data.substr(1));\n\t\t\tif (newData) PS.prefs.load(newData, true);\n\t\t\tPS.prefs.save = function () {\n\t\t\t\tconst prefData = JSON.stringify(PS.prefs.storage);\n\t\t\t\tPSStorage.postCrossOriginMessage('P' + prefData);\n\n\t\t\t\t// in Safari, cross-origin local storage is apparently treated as session\n\t\t\t\t// storage, so mirror the storage in the current origin just in case\n\t\t\t\ttry {\n\t\t\t\t\tlocalStorage.setItem('showdown_prefs', prefData);\n\t\t\t\t} catch {}\n\t\t\t};\n\t\t\tPS.prefs.update(null);\n\t\t\tbreak;\n\t\tcase 't':\n\t\t\tif (window.nodewebkit) return;\n\t\t\tlet oldTeams;\n\t\t\tif (PS.teams.list.length) {\n\t\t\t\t// Teams are still stored in the old location; merge them with the\n\t\t\t\t// new teams.\n\t\t\t\toldTeams = PS.teams.list;\n\t\t\t}\n\t\t\tPS.teams.unpackAll(data.substr(1));\n\t\t\tPS.teams.save = function () {\n\t\t\t\tconst packedTeams = PS.teams.packAll(PS.teams.list);\n\t\t\t\tPSStorage.postCrossOriginMessage('T' + packedTeams);\n\n\t\t\t\t// in Safari, cross-origin local storage is apparently treated as session\n\t\t\t\t// storage, so mirror the storage in the current origin just in case\n\t\t\t\tif (document.location.hostname === Config.routes.client) {\n\t\t\t\t\ttry {\n\t\t\t\t\t\tlocalStorage.setItem('showdown_teams_local', packedTeams);\n\t\t\t\t\t} catch {}\n\t\t\t\t}\n\t\t\t\tPS.teams.update('team');\n\t\t\t};\n\t\t\tif (oldTeams) {\n\t\t\t\tPS.teams.list = PS.teams.list.concat(oldTeams);\n\t\t\t\tPS.teams.save();\n\t\t\t\tlocalStorage.removeItem('showdown_teams');\n\t\t\t}\n\t\t\tif (data === 'tnull' && !PS.teams.list.length) {\n\t\t\t\tPS.teams.unpackAll(localStorage.getItem('showdown_teams_local'));\n\t\t\t}\n\t\t\tbreak;\n\t\tcase 'a':\n\t\t\tif (data === 'a0') {\n\t\t\t\tPS.alert(\"Your browser doesn't support third-party cookies. Some things might not work correctly.\");\n\t\t\t}\n\t\t\tif (!window.nodewebkit) {\n\t\t\t\t// for whatever reason, Node-Webkit doesn't let us make remote\n\t\t\t\t// Ajax requests or something. Oh well, making them direct\n\t\t\t\t// isn't a problem, either.\n\n\t\t\t\ttry {\n\t\t\t\t\t// I really hope this is a Chrome bug that this can fail\n\t\t\t\t\tPSStorage.frame!.postMessage(\"\", PSStorage.origin);\n\t\t\t\t} catch {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tPSStorage.requests = {};\n\t\t\t}\n\t\t\tPSStorage.loaded = true;\n\t\t\tPSStorage.loader?.();\n\t\t\tPSStorage.loader = undefined;\n\t\t\tbreak;\n\t\tcase 'r':\n\t\t\tconst reqData = JSON.parse(data.slice(1));\n\t\t\tconst idx = reqData[0];\n\t\t\tif (PSStorage.requests![idx]) {\n\t\t\t\tPSStorage.requests![idx](reqData[1]);\n\t\t\t\tdelete PSStorage.requests![idx];\n\t\t\t}\n\t\t\tbreak;\n\t\t}\n\t};\n\tstatic request(type: 'GET' | 'POST', uri: string, data: any): void | Promise<string> {\n\t\tif (!PSStorage.requests) return;\n\t\tconst idx = PSStorage.requestCount++;\n\t\treturn new Promise(resolve => {\n\t\t\tPSStorage.requests![idx] = resolve;\n\t\t\tPSStorage.postCrossOriginMessage((type === 'GET' ? 'R' : 'S') + JSON.stringify([uri, data, idx, 'text']));\n\t\t});\n\t}\n\tstatic postCrossOriginMessage = function (data: string) {\n\t\ttry {\n\t\t\t// I really hope this is a Chrome bug that this can fail\n\t\t\treturn PSStorage.frame!.postMessage(data, PSStorage.origin);\n\t\t} catch {\n\t\t}\n\t\treturn false;\n\t};\n};\n\nPSConnection.connect();\n\nexport const PSLoginServer = new class {\n\trawQuery(act: string, data: PostData): Promise<string | null> {\n\t\t// commenting out because for some reason this is working in Chrome????\n\t\t// if (location.protocol === 'file:') {\n\t\t// \talert(\"Sorry, login server queries don't work in the testclient. To log in, see README.md to set up testclient-key.js\");\n\t\t// \treturn Promise.resolve(null);\n\t\t// }\n\t\tdata.act = act;\n\t\t// Determine login server host & id.\n\t\t// Allow Config.loginserver (host) and Config.loginserverid override; fall back to current PS.server context.\n\t\t// This avoids needing inline index.html overrides.\n\t\tconst loginHost = (Config as any).loginserver || (Config.routes && Config.routes.client) || location.hostname;\n\t\tconst loginServerId = (Config as any).loginserverid || PS.server.id;\n\t\t// If a same-origin proxy is configured, prefer that to avoid CORS entirely.\n\t\tconst loginProxy = (Config as any).loginProxy as string | undefined;\n\t\tlet url = loginProxy || ('/~~' + loginServerId + '/action.php');\n\t\t// Always make absolute if override host differs from current hostname or we're on a static .html path\n\t\tif (loginHost !== location.hostname || location.pathname.endsWith('.html')) {\n\t\t\t// Only rewrite host if we are not intentionally using a same-origin proxy path.\n\t\t\tif (!loginProxy) {\n\t\t\t\turl = (location.protocol === 'http:' ? 'http://' : 'https://') + loginHost + url;\n\t\t\t}\n\t\t}\n\t\tif (typeof POKEMON_SHOWDOWN_TESTCLIENT_KEY === 'string') {\n\t\t\tdata.sid = POKEMON_SHOWDOWN_TESTCLIENT_KEY.replace(/%2C/g, ',');\n\t\t}\n\t\tif (localStorage.getItem('ps_debug_connect') === '1') {\n\t\t\tconsole.debug('[PS][login] POST', url, 'act=' + act);\n\t\t}\n\t\t// If using a same-origin proxy in a purely static hosting environment, PSStorage crossdomain iframe\n\t\t// may not exist and Net() abstraction might introduce CORS/headers we don't want. In that case,\n\t\t// fall back to a direct fetch with an x-www-form-urlencoded body.\n\t\tif (loginProxy) {\n\t\t\tconst formBody = Object.keys(data).map(k => encodeURIComponent(k) + '=' + encodeURIComponent('' + (data as any)[k])).join('&');\n\t\t\treturn fetch(url, {\n\t\t\t\tmethod: 'POST',\n\t\t\t\theaders: { 'Content-Type': 'application/x-www-form-urlencoded' },\n\t\t\t\tbody: formBody,\n\t\t\t\tcredentials: 'include',\n\t\t\t}).then(res => res.text()).catch(() => null);\n\t\t}\n\t\treturn PSStorage.request('POST', url, data) || Net(url).get({ method: 'POST', body: data }).then(\n\t\t\tres => res ?? null\n\t\t).catch(\n\t\t\t() => null\n\t\t);\n\t}\n\tquery(act: string, data: PostData = {}): Promise<{ [k: string]: any } | null> {\n\t\treturn this.rawQuery(act, data).then(\n\t\t\tres => res ? JSON.parse(res.slice(1)) : null\n\t\t).catch(\n\t\t\t() => null\n\t\t);\n\t}\n};\n\ninterface PostData {\n\t[key: string]: string | number | boolean | null | undefined;\n}\ninterface NetRequestOptions {\n\tmethod?: 'GET' | 'POST';\n\tbody?: string | PostData;\n\tquery?: PostData;\n}\nclass HttpError extends Error {\n\tstatusCode?: number;\n\tbody: string;\n\tconstructor(message: string, statusCode: number | undefined, body: string) {\n\t\tsuper(message);\n\t\tthis.name = 'HttpError';\n\t\tthis.statusCode = statusCode;\n\t\tthis.body = body;\n\t\ttry {\n\t\t\t(Error as any).captureStackTrace(this, HttpError);\n\t\t} catch {}\n\t}\n}\nclass NetRequest {\n\turi: string;\n\tconstructor(uri: string) {\n\t\tthis.uri = uri;\n\t}\n\n\t/**\n\t * Makes a basic http/https request to the URI.\n\t * Returns the response data.\n\t *\n\t * Will throw if the response code isn't 200 OK.\n\t *\n\t * @param opts request opts\n\t */\n\tget(opts: NetRequestOptions = {}): Promise<string> {\n\t\treturn new Promise((resolve, reject) => {\n\t\t\tconst xhr = new XMLHttpRequest();\n\t\t\tlet uri = this.uri;\n\t\t\tif (opts.query) {\n\t\t\t\turi += (uri.includes('?') ? '&' : '?') + Net.encodeQuery(opts.query);\n\t\t\t}\n\t\t\txhr.open(opts.method || 'GET', uri);\n\t\t\txhr.onreadystatechange = function () {\n\t\t\t\tconst DONE = 4;\n\t\t\t\tif (xhr.readyState === DONE) {\n\t\t\t\t\tif (xhr.status === 200) {\n\t\t\t\t\t\tresolve(xhr.responseText || '');\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\t\t\t\t\tconst err = new HttpError(xhr.statusText || \"Connection error\", xhr.status, xhr.responseText);\n\t\t\t\t\treject(err);\n\t\t\t\t}\n\t\t\t};\n\t\t\tif (opts.body) {\n\t\t\t\txhr.setRequestHeader(\"Content-Type\", \"application/x-www-form-urlencoded\");\n\t\t\t\txhr.send(Net.encodeQuery(opts.body));\n\t\t\t} else {\n\t\t\t\txhr.send();\n\t\t\t}\n\t\t});\n\t}\n\n\t/**\n\t * Makes a http/https POST request to the given link.\n\t * @param opts request opts\n\t * @param body POST body\n\t */\n\tpost(opts: Omit<NetRequestOptions, 'body'>, body: PostData | string): Promise<string>;\n\t/**\n\t * Makes a http/https POST request to the given link.\n\t * @param opts request opts\n\t */\n\tpost(opts?: NetRequestOptions): Promise<string>;\n\tpost(opts: NetRequestOptions = {}, body?: PostData | string) {\n\t\tif (!body) body = opts.body;\n\t\treturn this.get({\n\t\t\t...opts,\n\t\t\tmethod: 'POST',\n\t\t\tbody,\n\t\t});\n\t}\n}\n\nexport function Net(uri: string) {\n\tif (uri.startsWith('/') && !uri.startsWith('//') && Net.defaultRoute) uri = Net.defaultRoute + uri;\n\tif (uri.startsWith('//') && document.location.protocol === 'file:') uri = 'https:' + uri;\n\treturn new NetRequest(uri);\n}\n\nNet.defaultRoute = '';\n\nNet.encodeQuery = function (data: string | PostData): string {\n\tif (typeof data === 'string') return data;\n\tlet urlencodedData = '';\n\tfor (const key in data) {\n\t\tif (urlencodedData) urlencodedData += '&';\n\t\tlet value = data[key];\n\t\tif (value === true) value = 'on';\n\t\tif (value === false || value === null || value === undefined) value = '';\n\t\turlencodedData += encodeURIComponent(key) + '=' + encodeURIComponent(value);\n\t}\n\treturn urlencodedData;\n};\n\nNet.formData = function (form: HTMLFormElement): { [name: string]: string | boolean } {\n\t// not technically all `HTMLInputElement`s but who wants to cast all these?\n\tconst elements = form.querySelectorAll<HTMLInputElement>('input[name], select[name], textarea[name]');\n\tconst out: { [name: string]: string | boolean } = {};\n\tfor (const element of elements) {\n\t\tif (element.type === 'checkbox') {\n\t\t\tout[element.name] = element.getAttribute('value') ? (\n\t\t\t\telement.checked ? element.value : ''\n\t\t\t) : (\n\t\t\t\t!!element.checked\n\t\t\t);\n\t\t} else if (element.type !== 'radio' || element.checked) {\n\t\t\tout[element.name] = element.value;\n\t\t}\n\t}\n\treturn out;\n};\n"],"mappings":"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","ignoreList":[]}