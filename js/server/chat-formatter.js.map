{"version":3,"file":"chat-formatter.js","names":["linkRegex","TextFormatter","str","isTrusted","arguments","length","undefined","replaceLinebreaks","showSyntax","buffers","stack","offset","replace","uri","fulluri","test","substr","startsWith","slice","slashIndex","lastIndexOf","_proto","prototype","start","end","at","charAt","pushSpan","spanType","pushSlice","push","closeParenSpan","stackPosition","i","span","popSpan","closeSpan","pop","startIndex","tagName","attrs","syntax","popAllSpans","toUriComponent","html","component","encodeURIComponent","runLookahead","delimLength","curDelimLength","char","innerStart","innerEnd","colonPos","anglePos","termEnd","encodeURI","term","shortUri","key","toLowerCase","display","dir","toID","roomid","get","beginningOfLine","includes","join","formatText","stripFormatting","match","$1","$2","$3","$4","$5","$6"],"sources":["../../../caches/pokemon-showdown/server/chat-formatter.ts"],"sourcesContent":["/**\r\n * Chat parser\r\n * Pokemon Showdown - http://pokemonshowdown.com/\r\n *\r\n * Parses formate.\r\n *\r\n * @license MIT\r\n */\r\n\r\n/*\r\nSOURCE FOR LINKREGEX (compile with https://regexfree.k55.io/ )\r\n\r\n\t(\r\n\t\t(\r\n\t\t\t# When using http://, allow any domain\r\n\t\t\thttps?:\\/\\/ [a-z0-9-]+ ( \\. [a-z0-9-]+ )*\r\n\t\t|\r\n\t\t\t# When using www., expect at least one more dot\r\n\t\t\twww \\. [a-z0-9-]+ ( \\. [a-z0-9-]+ )+\r\n\t\t|\r\n\t\t\t# Otherwise, allow any domain, but only if\r\n\t\t\t\\b [a-z0-9-]+ ( \\. [a-z0-9-]+ )* \\.\r\n\t\t\t(\r\n\t\t\t\t# followed either a common TLD...\r\n\t\t\t\t( com? | org | net | edu | info | us | jp ) \\b\r\n\t\t\t|\r\n\t\t\t\t# or any 2-3 letter TLD followed by a port or /\r\n\t\t\t\t[a-z]{2,3} (?= :[0-9] | / )\r\n\t\t\t)\r\n\t\t)\r\n\t\t# possible custom port\r\n\t\t( : [0-9]+ )?\r\n\t\t(\r\n\t\t\t\\/\r\n\t\t\t(\r\n\t\t\t\t# characters allowed inside URL paths\r\n\t\t\t\t(\r\n\t\t\t\t\t[^\\s()&<>[\\]] | &amp; | &quot;\r\n\t\t\t\t|\r\n\t\t\t\t\t# parentheses in URLs should be matched, so they're not confused\r\n\t\t\t\t\t# for parentheses around URLs\r\n\t\t\t\t\t\\( ( [^\\s()<>&[\\]] | &amp; )* \\)\r\n\t  \t\t\t|\r\n\t\t\t\t\t\\[ ( [^\\s()<>&[\\]] | &amp; )* ]\r\n\t\t\t\t)*\r\n\t\t\t\t# URLs usually don't end with punctuation, so don't allow\r\n\t\t\t\t# punctuation symbols that probably arent related to URL.\r\n\t\t\t\t(\r\n\t\t\t\t\t[^\\s()[\\]{}\\\".,!?;:&<>*`^~\\\\]\r\n\t\t\t\t|\r\n\t\t\t\t\t# annoyingly, Wikipedia URLs often end in )\r\n\t\t\t\t\t\\( ( [^\\s()<>&[\\]] | &amp; )* \\)\r\n\t\t\t\t)\r\n\t\t\t)?\r\n\t\t)?\r\n\t|\r\n\t\t# email address\r\n\t\t[a-z0-9.]+ @ [a-z0-9-]+ ( \\. [a-z0-9-]+ )* \\. [a-z]{2,}\r\n\t)\r\n\t(?! [^ ]*&gt; )\r\n\r\n*/\r\nexport const linkRegex = /(?:(?:https?:\\/\\/[a-z0-9-]+(?:\\.[a-z0-9-]+)*|www\\.[a-z0-9-]+(?:\\.[a-z0-9-]+)+|\\b[a-z0-9-]+(?:\\.[a-z0-9-]+)*\\.(?:(?:com?|org|net|edu|info|us|jp)\\b|[a-z]{2,3}(?=:[0-9]|\\/)))(?::[0-9]+)?(?:\\/(?:(?:[^\\s()&<>[\\]]|&amp;|&quot;|\\((?:[^\\s()<>&[\\]]|&amp;)*\\)|\\[(?:[^\\s()<>&[\\]]|&amp;)*])*(?:[^\\s()[\\]{}\".,!?;:&<>*`^~\\\\]|\\((?:[^\\s()<>&[\\]]|&amp;)*\\)))?)?|[a-z0-9.]+@[a-z0-9-]+(?:\\.[a-z0-9-]+)*\\.[a-z]{2,})(?![^ ]*&gt;)/ig;\r\n\r\n/**\r\n * A span is a part of the text that's formatted. In the text:\r\n *\r\n *     Hi, **this** is an example.\r\n *\r\n * The word `this` is a `*` span. Many spans are just a symbol repeated, and\r\n * that symbol is the span type, but also many are more complicated.\r\n * For an explanation of all of these, see the `TextFormatter#get` function\r\n * implementation.\r\n */\r\ntype SpanType = '_' | '*' | '~' | '^' | '\\\\' | '|' | '<' | '[' | '`' | 'a' | 'u' | 'spoiler' | '>' | '(';\r\n\r\ntype FormatSpan = [SpanType, number];\r\n\r\nclass TextFormatter {\r\n\treadonly str: string;\r\n\treadonly buffers: string[];\r\n\treadonly stack: FormatSpan[];\r\n\t/** Allows access to special formatting (links without URL preview, pokemon icons) */\r\n\treadonly isTrusted: boolean;\r\n\t/** Replace \\n with <br /> */\r\n\treadonly replaceLinebreaks: boolean;\r\n\t/** Discord-style WYSIWYM output; markup characters are in `<tt>` */\r\n\treadonly showSyntax: boolean;\r\n\t/** offset of str that's been parsed so far */\r\n\toffset: number;\r\n\r\n\tconstructor(str: string, isTrusted = false, replaceLinebreaks = false, showSyntax = false) {\r\n\t\t// escapeHTML, without escaping /\r\n\t\tstr = `${str}`\r\n\t\t\t.replace(/&/g, '&amp;')\r\n\t\t\t.replace(/</g, '&lt;')\r\n\t\t\t.replace(/>/g, '&gt;')\r\n\t\t\t.replace(/\"/g, '&quot;')\r\n\t\t\t.replace(/'/g, '&apos;');\r\n\r\n\t\t// filter links first\r\n\t\tstr = str.replace(linkRegex, uri => {\r\n\t\t\tif (showSyntax) return `<u>${uri}</u>`;\r\n\t\t\tlet fulluri;\r\n\t\t\tif (/^[a-z0-9.]+@/ig.test(uri)) {\r\n\t\t\t\tfulluri = 'mailto:' + uri;\r\n\t\t\t} else {\r\n\t\t\t\tfulluri = uri.replace(/^([a-z]*[^a-z:])/g, 'http://$1');\r\n\t\t\t\tif (uri.substr(0, 24) === 'https://docs.google.com/' || uri.substr(0, 16) === 'docs.google.com/') {\r\n\t\t\t\t\tif (uri.startsWith('https')) uri = uri.slice(8);\r\n\t\t\t\t\tif (uri.substr(-12) === '?usp=sharing' || uri.substr(-12) === '&usp=sharing') uri = uri.slice(0, -12);\r\n\t\t\t\t\tif (uri.substr(-6) === '#gid=0') uri = uri.slice(0, -6);\r\n\t\t\t\t\tlet slashIndex = uri.lastIndexOf('/');\r\n\t\t\t\t\tif (uri.length - slashIndex > 18) slashIndex = uri.length;\r\n\t\t\t\t\tif (slashIndex - 4 > 19 + 3) {\r\n\t\t\t\t\t\turi = `${uri.slice(0, 19)}<small class=\"message-overflow\">${uri.slice(19, slashIndex - 4)}</small>` +\r\n\t\t\t\t\t\t\t`${uri.slice(slashIndex - 4)}`;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\treturn `<a href=\"${fulluri}\" rel=\"noopener\" target=\"_blank\">${uri}</a>`;\r\n\t\t});\r\n\t\t// (links don't have any specific syntax, they're just a pattern, so we detect them in a separate pass)\r\n\r\n\t\tthis.str = str;\r\n\t\tthis.buffers = [];\r\n\t\tthis.stack = [];\r\n\t\tthis.isTrusted = isTrusted;\r\n\t\tthis.replaceLinebreaks = this.isTrusted || replaceLinebreaks;\r\n\t\tthis.showSyntax = showSyntax;\r\n\t\tthis.offset = 0;\r\n\t}\r\n\t// debugAt(i=0, j=i+1) { console.log(`${this.slice(0, i)}[${this.slice(i, j)}]${this.slice(j, this.str.length)}`); }\r\n\r\n\tslice(start: number, end: number) {\r\n\t\treturn this.str.slice(start, end);\r\n\t}\r\n\r\n\tat(start: number) {\r\n\t\treturn this.str.charAt(start);\r\n\t}\r\n\r\n\t/**\r\n\t * We've encountered a possible start for a span. It's pushed onto our span\r\n\t * stack.\r\n\t *\r\n\t * The span stack saves the start position so it can be replaced with HTML\r\n\t * if we find an end for the span, but we don't actually replace it until\r\n\t * `closeSpan` is called, so nothing happens (it stays plaintext) if no end\r\n\t * is found.\r\n\t */\r\n\tpushSpan(spanType: SpanType, start: number, end: number) {\r\n\t\tthis.pushSlice(start);\r\n\t\tthis.stack.push([spanType, this.buffers.length]);\r\n\t\tthis.buffers.push(this.slice(start, end));\r\n\t\tthis.offset = end;\r\n\t}\r\n\r\n\tpushSlice(end: number) {\r\n\t\tif (end !== this.offset) {\r\n\t\t\tthis.buffers.push(this.slice(this.offset, end));\r\n\t\t\tthis.offset = end;\r\n\t\t}\r\n\t}\r\n\r\n\tcloseParenSpan(start: number) {\r\n\t\tlet stackPosition = -1;\r\n\t\tfor (let i = this.stack.length - 1; i >= 0; i--) {\r\n\t\t\tconst span = this.stack[i];\r\n\t\t\tif (span[0] === '(') {\r\n\t\t\t\tstackPosition = i;\r\n\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t\tif (span[0] !== 'spoiler') break;\r\n\t\t}\r\n\t\tif (stackPosition === -1) return false;\r\n\r\n\t\tthis.pushSlice(start);\r\n\t\twhile (this.stack.length > stackPosition) this.popSpan(start);\r\n\t\tthis.offset = start;\r\n\t\treturn true;\r\n\t}\r\n\r\n\t/**\r\n\t * We've encountered a possible end for a span. If it's in the span stack,\r\n\t * we transform it into HTML.\r\n\t */\r\n\tcloseSpan(spanType: SpanType, start: number, end: number) {\r\n\t\t// loop backwards\r\n\t\tlet stackPosition = -1;\r\n\t\tfor (let i = this.stack.length - 1; i >= 0; i--) {\r\n\t\t\tconst span = this.stack[i];\r\n\t\t\tif (span[0] === spanType) {\r\n\t\t\t\tstackPosition = i;\r\n\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t}\r\n\t\tif (stackPosition === -1) return false;\r\n\r\n\t\tthis.pushSlice(start);\r\n\t\twhile (this.stack.length > stackPosition + 1) this.popSpan(start);\r\n\t\tconst span = this.stack.pop()!;\r\n\t\tconst startIndex = span[1];\r\n\t\tlet tagName = '';\r\n\t\tlet attrs = '';\r\n\t\tswitch (spanType) {\r\n\t\tcase '_': tagName = 'i'; break;\r\n\t\tcase '*': tagName = 'b'; break;\r\n\t\tcase '~': tagName = 's'; break;\r\n\t\tcase '^': tagName = 'sup'; break;\r\n\t\tcase '\\\\': tagName = 'sub'; break;\r\n\t\tcase '|': tagName = 'span'; attrs = (this.showSyntax ? ' class=\"spoiler-shown\"' : ' class=\"spoiler\"'); break;\r\n\t\t}\r\n\t\tconst syntax = (this.showSyntax ? `<tt>${spanType}${spanType}</tt>` : '');\r\n\t\tif (tagName) {\r\n\t\t\tthis.buffers[startIndex] = `${syntax}<${tagName}${attrs}>`;\r\n\t\t\tthis.buffers.push(`</${tagName}>${syntax}`);\r\n\t\t\tthis.offset = end;\r\n\t\t}\r\n\t\treturn true;\r\n\t}\r\n\r\n\t/**\r\n\t * Ends a span without an ending symbol. For most spans, this means\r\n\t * they don't take effect, but certain spans like spoiler tags don't\r\n\t * require ending symbols.\r\n\t */\r\n\tpopSpan(end: number) {\r\n\t\tconst span = this.stack.pop();\r\n\t\tif (!span) return false;\r\n\t\tthis.pushSlice(end);\r\n\t\tswitch (span[0]) {\r\n\t\tcase 'spoiler':\r\n\t\t\tthis.buffers.push(`</span>`);\r\n\t\t\tthis.buffers[span[1]] = (this.showSyntax ? `<span class=\"spoiler-shown\">` : `<span class=\"spoiler\">`);\r\n\t\t\tbreak;\r\n\t\tcase '>':\r\n\t\t\tthis.buffers.push(`</span>`);\r\n\t\t\tthis.buffers[span[1]] = `<span class=\"greentext\">`;\r\n\t\t\tbreak;\r\n\t\tdefault:\r\n\t\t\t// do nothing\r\n\t\t\tbreak;\r\n\t\t}\r\n\t\treturn true;\r\n\t}\r\n\r\n\tpopAllSpans(end: number) {\r\n\t\twhile (this.stack.length) this.popSpan(end);\r\n\t\tthis.pushSlice(end);\r\n\t}\r\n\r\n\ttoUriComponent(html: string) {\r\n\t\tconst component = html.replace(/&lt;/g, '<')\r\n\t\t\t.replace(/&gt;/g, '>')\r\n\t\t\t.replace(/&quot;/g, '\"')\r\n\t\t\t.replace(/&apos;/g, '\\'')\r\n\t\t\t.replace(/&amp;/g, '&');\r\n\t\treturn encodeURIComponent(component);\r\n\t}\r\n\r\n\t/**\r\n\t * Handles special cases.\r\n\t */\r\n\trunLookahead(spanType: SpanType, start: number) {\r\n\t\tswitch (spanType) {\r\n\t\tcase '`':\r\n\t\t\t// code span. Not only are the contents not formatted, but\r\n\t\t\t// the start and end delimiters must match in length.\r\n\t\t\t// ``Neither `this` nor ```this``` end this code span.``\r\n\t\t\t{\r\n\t\t\t\tlet delimLength = 0;\r\n\t\t\t\tlet i = start;\r\n\t\t\t\twhile (this.at(i) === '`') {\r\n\t\t\t\t\tdelimLength++;\r\n\t\t\t\t\ti++;\r\n\t\t\t\t}\r\n\t\t\t\tlet curDelimLength = 0;\r\n\t\t\t\twhile (i < this.str.length) {\r\n\t\t\t\t\tconst char = this.at(i);\r\n\t\t\t\t\tif (char === '\\n') break;\r\n\t\t\t\t\tif (char === '`') {\r\n\t\t\t\t\t\tcurDelimLength++;\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tif (curDelimLength === delimLength) break;\r\n\t\t\t\t\t\tcurDelimLength = 0;\r\n\t\t\t\t\t}\r\n\t\t\t\t\ti++;\r\n\t\t\t\t}\r\n\t\t\t\tif (curDelimLength !== delimLength) return false;\r\n\t\t\t\tconst end = i;\r\n\t\t\t\t// matching delims found\r\n\t\t\t\tthis.pushSlice(start);\r\n\t\t\t\tlet innerStart = start + delimLength;\r\n\t\t\t\tlet innerEnd = i - delimLength;\r\n\t\t\t\tif (innerStart + 1 >= innerEnd) {\r\n\t\t\t\t\t// no special whitespace handling\r\n\t\t\t\t} else if (this.at(innerStart) === ' ' && this.at(innerEnd - 1) === ' ') {\r\n\t\t\t\t\tinnerStart++; // strip starting and ending space\r\n\t\t\t\t\tinnerEnd--;\r\n\t\t\t\t} else if (this.at(innerStart) === ' ' && this.at(innerStart + 1) === '`') {\r\n\t\t\t\t\tinnerStart++; // strip starting space\r\n\t\t\t\t} else if (this.at(innerEnd - 1) === ' ' && this.at(innerEnd - 2) === '`') {\r\n\t\t\t\t\tinnerEnd--; // strip ending space\r\n\t\t\t\t}\r\n\t\t\t\tif (this.showSyntax) this.buffers.push(`<tt>${this.slice(start, innerStart)}</tt>`);\r\n\t\t\t\tthis.buffers.push(`<code>`);\r\n\t\t\t\tthis.buffers.push(this.slice(innerStart, innerEnd));\r\n\t\t\t\tthis.buffers.push(`</code>`);\r\n\t\t\t\tif (this.showSyntax) this.buffers.push(`<tt>${this.slice(innerEnd, end)}</tt>`);\r\n\t\t\t\tthis.offset = end;\r\n\t\t\t}\r\n\t\t\treturn true;\r\n\t\tcase '[':\r\n\t\t\t// Link span. Several possiblilities:\r\n\t\t\t// [[text <uri>]] - a link with custom text\r\n\t\t\t// [[search term]] - Google search\r\n\t\t\t// [[wiki: search term]] - Wikipedia search\r\n\t\t\t// [[pokemon: species name]] - icon (also item:, type:, category:)\r\n\t\t\t{\r\n\t\t\t\tif (this.slice(start, start + 2) !== '[[') return false;\r\n\t\t\t\tlet i = start + 2;\r\n\t\t\t\tlet colonPos = -1; // `:`\r\n\t\t\t\tlet anglePos = -1; // `<`\r\n\t\t\t\twhile (i < this.str.length) {\r\n\t\t\t\t\tconst char = this.at(i);\r\n\t\t\t\t\tif (char === ']' || char === '\\n') break;\r\n\t\t\t\t\tif (char === ':' && colonPos < 0) colonPos = i;\r\n\t\t\t\t\tif (char === '&' && this.slice(i, i + 4) === '&lt;') anglePos = i;\r\n\t\t\t\t\ti++;\r\n\t\t\t\t}\r\n\t\t\t\tif (this.slice(i, i + 2) !== ']]') return false;\r\n\r\n\t\t\t\tthis.pushSlice(start);\r\n\t\t\t\tthis.offset = i + 2;\r\n\t\t\t\tlet termEnd = i;\r\n\t\t\t\tlet uri = '';\r\n\t\t\t\tif (anglePos >= 0 && this.slice(i - 4, i) === '&gt;') { // `>`\r\n\t\t\t\t\turi = this.slice(anglePos + 4, i - 4);\r\n\t\t\t\t\ttermEnd = anglePos;\r\n\t\t\t\t\tif (this.at(termEnd - 1) === ' ') termEnd--;\r\n\t\t\t\t\turi = encodeURI(uri.replace(/^([a-z]*[^a-z:])/g, 'http://$1'));\r\n\t\t\t\t}\r\n\t\t\t\tlet term = this.slice(start + 2, termEnd).replace(/<\\/?[au](?: [^>]+)?>/g, '');\r\n\t\t\t\tif (this.showSyntax) {\r\n\t\t\t\t\tterm += `<small>${this.slice(termEnd, i)}</small>`;\r\n\t\t\t\t} else if (uri && !this.isTrusted) {\r\n\t\t\t\t\tconst shortUri = uri.replace(/^https?:\\/\\//, '').replace(/^www\\./, '').replace(/\\/$/, '');\r\n\t\t\t\t\tterm += `<small> &lt;${shortUri}&gt;</small>`;\r\n\t\t\t\t\turi += '\" rel=\"noopener';\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif (colonPos > 0) {\r\n\t\t\t\t\tconst key = this.slice(start + 2, colonPos).toLowerCase();\r\n\t\t\t\t\tswitch (key) {\r\n\t\t\t\t\tcase 'w':\r\n\t\t\t\t\tcase 'wiki':\r\n\t\t\t\t\t\tif (this.showSyntax) break;\r\n\t\t\t\t\t\tterm = term.slice(term.charAt(key.length + 1) === ' ' ? key.length + 2 : key.length + 1);\r\n\t\t\t\t\t\turi = `//en.wikipedia.org/w/index.php?title=Special:Search&search=${this.toUriComponent(term)}`;\r\n\t\t\t\t\t\tterm = `wiki: ${term}`;\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tcase 'pokemon':\r\n\t\t\t\t\tcase 'item':\r\n\t\t\t\t\tcase 'type':\r\n\t\t\t\t\tcase 'category':\r\n\t\t\t\t\t\tif (this.showSyntax) {\r\n\t\t\t\t\t\t\tthis.buffers.push(`<tt>${this.slice(start, this.offset)}</tt>`);\r\n\t\t\t\t\t\t\treturn true;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tterm = term.slice(term.charAt(key.length + 1) === ' ' ? key.length + 2 : key.length + 1);\r\n\r\n\t\t\t\t\t\tlet display = '';\r\n\t\t\t\t\t\tif (this.isTrusted) {\r\n\t\t\t\t\t\t\tdisplay = `<psicon ${key}=\"${term}\" />`;\r\n\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\tdisplay = `[${term}]`;\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\tlet dir = key;\r\n\t\t\t\t\t\tif (key === 'item') dir += 's';\r\n\t\t\t\t\t\tif (key === 'category') dir = 'categories' as 'category';\r\n\r\n\t\t\t\t\t\turi = `//dex.pokemonshowdown.com/${dir}/${toID(term)}`;\r\n\t\t\t\t\t\tterm = display;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\tif (!uri) {\r\n\t\t\t\t\turi = `//www.google.com/search?ie=UTF-8&btnI&q=${this.toUriComponent(term)}`;\r\n\t\t\t\t}\r\n\t\t\t\tif (this.showSyntax) {\r\n\t\t\t\t\tthis.buffers.push(`<tt>[[</tt><u>${term}</u><tt>]]</tt>`);\r\n\t\t\t\t} else {\r\n\t\t\t\t\tthis.buffers.push(`<a href=\"${uri}\" target=\"_blank\">${term}</a>`);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\treturn true;\r\n\t\tcase '<':\r\n\t\t\t// Roomid-link span. Not to be confused with a URL span.\r\n\t\t\t// `<<roomid>>`\r\n\t\t\t{\r\n\t\t\t\tif (this.slice(start, start + 8) !== '&lt;&lt;') return false; // <<\r\n\t\t\t\tlet i = start + 8;\r\n\t\t\t\twhile (/[a-z0-9-]/.test(this.at(i))) i++;\r\n\t\t\t\tif (this.slice(i, i + 8) !== '&gt;&gt;') return false; // >>\r\n\r\n\t\t\t\tthis.pushSlice(start);\r\n\t\t\t\tconst roomid = this.slice(start + 8, i);\r\n\t\t\t\tif (this.showSyntax) {\r\n\t\t\t\t\tthis.buffers.push(`<small>&lt;&lt;</small><u>${roomid}</u><small>&gt;&gt;</small>`);\r\n\t\t\t\t} else {\r\n\t\t\t\t\tthis.buffers.push(`&laquo;<a href=\"/${roomid}\" target=\"_blank\">${roomid}</a>&raquo;`);\r\n\t\t\t\t}\r\n\t\t\t\tthis.offset = i + 8;\r\n\t\t\t}\r\n\t\t\treturn true;\r\n\t\tcase 'a': case 'u':\r\n\t\t\t// URL span. Skip to the end of the link - where `</a>` or `</u>` is.\r\n\t\t\t// Nothing inside should be formatted further (obviously we don't want\r\n\t\t\t// `example.com/__foo__` to turn `foo` italic).\r\n\t\t\t{\r\n\t\t\t\tlet i = start + 2;\r\n\t\t\t\t// Find </a> or </u>.\r\n\t\t\t\t// We need to check the location of `>` to disambiguate from </small>.\r\n\t\t\t\twhile (this.at(i) !== '<' || this.at(i + 1) !== '/' || this.at(i + 3) !== '>') i++;\r\n\t\t\t\ti += 4;\r\n\t\t\t\tthis.pushSlice(i);\r\n\t\t\t}\r\n\t\t\treturn true;\r\n\t\t}\r\n\t\treturn false;\r\n\t}\r\n\r\n\tget() {\r\n\t\tlet beginningOfLine = this.offset;\r\n\t\t// main loop! `i` tracks our position\r\n\t\t// Note that we skip around a lot; `i` is mutated inside the loop\r\n\t\t// pretty often.\r\n\t\tfor (let i = beginningOfLine; i < this.str.length; i++) {\r\n\t\t\tconst char = this.at(i);\r\n\t\t\tswitch (char) {\r\n\t\t\tcase '_':\r\n\t\t\tcase '*':\r\n\t\t\tcase '~':\r\n\t\t\tcase '^':\r\n\t\t\tcase '\\\\':\r\n\t\t\tcase '|':\r\n\t\t\t\t// Must be exactly two chars long.\r\n\t\t\t\tif (this.at(i + 1) === char && this.at(i + 2) !== char) {\r\n\t\t\t\t\t// This is a completely normal two-char span. Close it if it's\r\n\t\t\t\t\t// already open, open it if it's not.\r\n\t\t\t\t\t// The inside of regular spans must not start or end with a space.\r\n\t\t\t\t\tif (!(this.at(i - 1) !== ' ' && this.closeSpan(char, i, i + 2))) {\r\n\t\t\t\t\t\tif (this.at(i + 2) !== ' ') this.pushSpan(char, i, i + 2);\r\n\t\t\t\t\t}\r\n\t\t\t\t\tif (i < this.offset) {\r\n\t\t\t\t\t\ti = this.offset - 1;\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\twhile (this.at(i + 1) === char) i++;\r\n\t\t\t\tbreak;\r\n\t\t\tcase '(':\r\n\t\t\t\t// `(` span - does nothing except end spans\r\n\t\t\t\tthis.stack.push(['(', -1]);\r\n\t\t\t\tbreak;\r\n\t\t\tcase ')':\r\n\t\t\t\t// end of `(` span\r\n\t\t\t\tthis.closeParenSpan(i);\r\n\t\t\t\tif (i < this.offset) {\r\n\t\t\t\t\ti = this.offset - 1;\r\n\t\t\t\t\tbreak;\r\n\t\t\t\t}\r\n\t\t\t\tbreak;\r\n\t\t\tcase '`':\r\n\t\t\t\t// ` ``code`` ` span. Uses lookahead because its contents are not\r\n\t\t\t\t// formatted.\r\n\t\t\t\t// Must be at least two `` ` `` in a row.\r\n\t\t\t\tif (this.at(i + 1) === '`') this.runLookahead('`', i);\r\n\t\t\t\tif (i < this.offset) {\r\n\t\t\t\t\ti = this.offset - 1;\r\n\t\t\t\t\tbreak;\r\n\t\t\t\t}\r\n\t\t\t\twhile (this.at(i + 1) === '`') i++;\r\n\t\t\t\tbreak;\r\n\t\t\tcase '[':\r\n\t\t\t\t// `[` (link) span. Uses lookahead because it might contain a\r\n\t\t\t\t// URL which can't be formatted, or search terms that can't be\r\n\t\t\t\t// formatted.\r\n\t\t\t\tthis.runLookahead('[', i);\r\n\t\t\t\tif (i < this.offset) {\r\n\t\t\t\t\ti = this.offset - 1;\r\n\t\t\t\t\tbreak;\r\n\t\t\t\t}\r\n\t\t\t\twhile (this.at(i + 1) === '[') i++;\r\n\t\t\t\tbreak;\r\n\t\t\tcase ':':\r\n\t\t\t\t// Looks behind for `spoiler:` or `spoilers:`. Spoiler spans\r\n\t\t\t\t// are also weird because they don't require an ending symbol,\r\n\t\t\t\t// although that's not handled here.\r\n\t\t\t\tif (i < 7) break;\r\n\t\t\t\tif (this.slice(i - 7, i + 1).toLowerCase() === 'spoiler:' ||\r\n\t\t\t\t\tthis.slice(i - 8, i + 1).toLowerCase() === 'spoilers:') {\r\n\t\t\t\t\tif (this.at(i + 1) === ' ') i++;\r\n\t\t\t\t\tthis.pushSpan('spoiler', i + 1, i + 1);\r\n\t\t\t\t}\r\n\t\t\t\tbreak;\r\n\t\t\tcase '&': // escaped '<' or '>'\r\n\t\t\t\t// greentext or roomid\r\n\t\t\t\tif (i === beginningOfLine && this.slice(i, i + 4) === '&gt;') {\r\n\t\t\t\t\t// greentext span, normal except it lacks an ending span\r\n\t\t\t\t\t// check for certain emoticons like `>_>` or `>w<`\r\n\t\t\t\t\tif (!\"._/=:;\".includes(this.at(i + 4)) && !['w&lt;', 'w&gt;'].includes(this.slice(i + 4, i + 9))) {\r\n\t\t\t\t\t\tthis.pushSpan('>', i, i);\r\n\t\t\t\t\t}\r\n\t\t\t\t} else {\r\n\t\t\t\t\t// completely normal `<<roomid>>` span\r\n\t\t\t\t\t// uses lookahead because roomids can't be formatted.\r\n\t\t\t\t\tthis.runLookahead('<', i);\r\n\t\t\t\t}\r\n\t\t\t\tif (i < this.offset) {\r\n\t\t\t\t\ti = this.offset - 1;\r\n\t\t\t\t\tbreak;\r\n\t\t\t\t}\r\n\t\t\t\twhile (this.slice(i + 1, i + 5) === 'lt;&') i += 4;\r\n\t\t\t\tbreak;\r\n\t\t\tcase '<': // guaranteed to be <a ...> or <u>\r\n\t\t\t\t// URL span\r\n\t\t\t\t// The constructor has already converted `<` to `&lt;` and URLs\r\n\t\t\t\t// to links, so `<` must be the start of a converted link.\r\n\t\t\t\tthis.runLookahead('a', i);\r\n\t\t\t\tif (i < this.offset) {\r\n\t\t\t\t\ti = this.offset - 1;\r\n\t\t\t\t\tbreak;\r\n\t\t\t\t}\r\n\t\t\t\t// should never happen\r\n\t\t\t\tbreak;\r\n\t\t\tcase '\\r':\r\n\t\t\tcase '\\n':\r\n\t\t\t\t// End of the line. No spans span multiple lines.\r\n\t\t\t\tthis.popAllSpans(i);\r\n\t\t\t\tif (this.replaceLinebreaks) {\r\n\t\t\t\t\tthis.buffers.push(`<br />`);\r\n\t\t\t\t\tthis.offset++;\r\n\t\t\t\t}\r\n\t\t\t\tbeginningOfLine = i + 1;\r\n\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tthis.popAllSpans(this.str.length);\r\n\t\treturn this.buffers.join('');\r\n\t}\r\n}\r\n\r\n/**\r\n * Takes a string and converts it to HTML by replacing standard chat formatting with the appropriate HTML tags.\r\n */\r\nexport function formatText(str: string, isTrusted = false, replaceLinebreaks = false, showSyntax = false) {\r\n\treturn new TextFormatter(str, isTrusted, replaceLinebreaks, showSyntax).get();\r\n}\r\n\r\n/**\r\n * Takes a string and strips all standard chat formatting except greentext from it, the text of a link is kept.\r\n */\r\nexport function stripFormatting(str: string) {\r\n\t// Doesn't match > meme arrows because the angle bracket appears in the chat still.\r\n\tstr = str.replace(/\\*\\*([^\\s*]+)\\*\\*|__([^\\s_]+)__|~~([^\\s~]+)~~|``([^\\s`]+)``|\\^\\^([^\\s^]+)\\^\\^|\\\\([^\\s\\\\]+)\\\\/g,\r\n\t\t(match, $1, $2, $3, $4, $5, $6) => $1 || $2 || $3 || $4 || $5 || $6);\r\n\t// Remove all of the link expect for the text in [[text<url>]]\r\n\treturn str.replace(/\\[\\[(?:([^<]*)\\s*<[^>]+>|([^\\]]+))\\]\\]/g, (match, $1, $2) => $1 || $2 || '');\r\n}\r\n"],"mappings":"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","ignoreList":[]}